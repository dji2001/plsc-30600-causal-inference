knitr::opts_chunk$set(echo = TRUE)
# use packages
library(rddensity)
library(rdrobust)
library(lpdensity)
library(haven)
library(tidyverse)
meyersson_2014ecta <- read_dta("meyersson_2014ecta.dta")
View(meyersson_2014ecta)
View(meyersson_2014ecta)
View(meyersson_2014ecta)
# load data from Meyersson (2014, ECTA)
meyersson_2014ecta <- read_dta("meyersson_2014ecta.dta")
# specify outcome, running variable, and treatment variable
Y <- meyersson_2014ecta$Y
X <- meyersson_2014ecta$X
T <- meyersson_2014ecta$T
# Analyzing the running variable
meyersson_2014ecta %>%
group_by(T) %>%
summarize(count = n(),
vore_share = mean(X))
# load data from Meyersson (2014, ECTA)
meyersson_2014ecta <- read_dta("meyersson_2014ecta.dta")
# specify outcome, running variable, and treatment variable
Y <- meyersson_2014ecta$Y
X <- meyersson_2014ecta$X
T <- meyersson_2014ecta$T
# Analyzing the running variable
meyersson_2014ecta %>%
group_by(T) %>%
summarize(count = n(),
vote_margin = mean(X))
View(meyersson_2014ecta)
# test H0: the density of the running variable is continuous at the cutoff
out <- rddensity(X)
summary(out)
# plot histogram of running variable
bw_left <- as.numeric(rddensity(X)$h[1])
bw_right <- as.numeric(rddensity(X)$h[2])
tempdata <- as.data.frame(X)
colnames(tempdata) = c("v1")
plot2 <- ggplot(data=tempdata, aes(tempdata$v1)) +
theme_bw(base_size = 17) +
geom_histogram(data = tempdata,
aes(x = v1, y= ..count..),
breaks = seq(-bw_left, 0, 1),
fill = "blue",
col = "black",
alpha = 1) +
geom_histogram(data = tempdata,
aes(x = v1, y= ..count..),
breaks = seq(0, bw_right, 1),
fill = "red",
col = "black",
alpha = 1) +
labs(x = "Score", y = "Number of Observations") +
geom_vline(xintercept = 0, color = "black")
plot2
out
View(tempdata)
rddensity(X)
view(rddensity(X)$h)
view(rddensity(X))
rddensity(X)
view(rddensity(X))
# plot the density of the running variable
est1 <- lpdensity(data = X[X < 0 & X >= -bw_left],
grid = seq(-bw_left, 0, 0.1),
bwselect = "IMSE",
scale = sum(X < 0 & X >= -bw_left) / length(X))
est2 <- lpdensity(data = X[X >= 0 & X <= bw_right],
grid = seq(0, bw_right, 0.1),
bwselect = "IMSE",
scale = sum(X >= 0 & X <= bw_right) / length(X))
plot1 <- lpdensity.plot(est1,
est2,
CIshade = 0.2,
lcol = c(4, 2),
CIcol = c(4, 2),
legendGroups = c("Control", "Treatment")) +
labs(x = "Score", y = "Density") +
geom_vline(xintercept = 0, color = "black") +
theme_bw(base_size = 17) +
theme(legend.position = c(0.8, 0.85))
plot1
# Log Population in 1994
out <- rdrobust(meyersson_2014ecta$lpop1994, X)
summary(out)
# Number of Parties Receiving Votes in 1994
out <- rdrobust(meyersson_2014ecta$partycount, X)
summary(out)
# Islamic Vote Percentage in 1994
out <- rdrobust(meyersson_2014ecta$vshr_islam1994, X)
summary(out)
# Islamic Mayor in 1989
out <- rdrobust(meyersson_2014ecta$i89, X)
summary(out)
# Province Center Indicator
out <- rdrobust(meyersson_2014ecta$merkezp, X)
summary(out)
# District Center Indicator
out <- rdrobust(meyersson_2014ecta$merkezi, X)
summary(out)
# plot the raw data
plot(X,
Y,
xlab = "Score",
ylab = "Outcome",
col = 1,
pch = 20,
cex.axis = 1.5,
cex.lab = 1.5)
abline(v=0)
# use rdplot package to draw plot with evenly spaced bins
out <- rdplot(Y,
X,
nbins = c(20,20),
binselect = 'es',
y.lim = c(0,25))
summary(out)
# use rdplot package to draw plot with quantile spaced bins
out <- rdplot(Y,
X,
nbins = c(20,20),
binselect = 'qs',
y.lim = c(0,25))
summary(out)
# rdrobust without covariates
out <- rdrobust(Y,
X,
kernel = "triangular",
p = 1,
bwselect = "mserd",
all = TRUE)
summary(out)
# rdrobust with covariates
Z <- cbind(meyersson_2014ecta$vshr_islam1994,
meyersson_2014ecta$partycount,
meyersson_2014ecta$lpop1994,
meyersson_2014ecta$merkezi,
meyersson_2014ecta$merkezp,
meyersson_2014ecta$subbuyuk,
meyersson_2014ecta$buyuk)
colnames(Z) <- c("vshr_islam1994",
"partycount",
"lpop1994",
"merkezi",
"merkezp",
"subbuyuk",
"buyuk")
out <- rdrobust(Y,
X,
covs = Z,
kernel = 'triangular',
scaleregul = 1,
p = 1,
bwselect = 'mserd',
all = TRUE)
summary(out)
View(Z)
knitr::opts_chunk$set(echo = TRUE)
# use packages
library(rddensity)
library(rdrobust)
library(lpdensity)
library(haven)
library(tidyverse)
# load data from Meyersson (2014, ECTA)
meyersson_2014ecta <- read_dta("meyersson_2014ecta.dta")
# specify outcome, running variable, and treatment variable
Y <- meyersson_2014ecta$Y
X <- meyersson_2014ecta$X
T <- meyersson_2014ecta$T
# Analyzing the running variable
meyersson_2014ecta %>%
group_by(T) %>%
summarize(count = n(),
vote_margin = mean(X))
# test H0: the density of the running variable is continuous at the cutoff
out <- rddensity(X)
summary(out)
# plot the raw counts of running variable
bw_left <- as.numeric(rddensity(X)$h[1]) #BW est. (h)           30.539              28.287
bw_right <- as.numeric(rddensity(X)$h[2])
tempdata <- as.data.frame(X)
colnames(tempdata) = c("v1")
plot2 <- ggplot(data=tempdata, aes(tempdata$v1)) +
theme_bw(base_size = 17) +
geom_histogram(data = tempdata,
aes(x = v1, y= ..count..),
breaks = seq(-bw_left, 0, 1),
fill = "blue",
col = "black",
alpha = 1) +
geom_histogram(data = tempdata,
aes(x = v1, y= ..count..),
breaks = seq(0, bw_right, 1),
fill = "red",
col = "black",
alpha = 1) +
labs(x = "Score", y = "Number of Observations") +
geom_vline(xintercept = 0, color = "black")
plot2
# plot the density of the running variable
# "IMSE" stands for Integrated Mean Squared Error.
# The "lpdensity" function (Local Polynomial Density Estimation) will automatically select the bandwidth that minimizes the Integrated Mean Squared Error of the density estimate.
# The ratio sum(X < 0 & X >= -bw_left) / length(X) scales the density estimate according to the proportion of the data that falls in the selected subset.
est1 <- lpdensity(data = X[X < 0 & X >= -bw_left],
grid = seq(-bw_left, 0, 0.1),
bwselect = "IMSE",
scale = sum(X < 0 & X >= -bw_left) / length(X))
est2 <- lpdensity(data = X[X >= 0 & X <= bw_right],
grid = seq(0, bw_right, 0.1),
bwselect = "IMSE",
scale = sum(X >= 0 & X <= bw_right) / length(X))
plot1 <- lpdensity.plot(est1,
est2,
CIshade = 0.2,
lcol = c(4, 2),
CIcol = c(4, 2),
legendGroups = c("Control", "Treatment")) +
labs(x = "Score", y = "Density") +
geom_vline(xintercept = 0, color = "black") +
theme_bw(base_size = 17) +
theme(legend.position = c(0.8, 0.85))
plot1
# Log Population in 1994
out <- rdrobust(meyersson_2014ecta$lpop1994, X)
summary(out)
# Number of Parties Receiving Votes in 1994
out <- rdrobust(meyersson_2014ecta$partycount, X)
summary(out)
# Islamic Vote Percentage in 1994
out <- rdrobust(meyersson_2014ecta$vshr_islam1994, X)
summary(out)
# Islamic Mayor in 1989
out <- rdrobust(meyersson_2014ecta$i89, X)
summary(out)
# Province Center Indicator
out <- rdrobust(meyersson_2014ecta$merkezp, X)
summary(out)
# District Center Indicator
out <- rdrobust(meyersson_2014ecta$merkezi, X)
summary(out)
# plot the raw data
plot(X,
Y,
xlab = "Score",
ylab = "Outcome",
col = 1,
pch = 20,
cex.axis = 1.5,
cex.lab = 1.5)
abline(v=0)
# use rdplot package to draw plot with evenly spaced bins
# the bins will be equally spaced on both sides of the cutoff.
out <- rdplot(Y,
X,
nbins = c(20,20),
binselect = 'es',
y.lim = c(0,25))
summary(out)
# use rdplot package to draw plot with quantile spaced bins
# the bins will contain an equal number of observations, making them "quantile-spaced."
out <- rdplot(Y,
X,
nbins = c(20,20),
binselect = 'qs',
y.lim = c(0,25))
summary(out)
# rdrobust without covariates
# the local polynomial order for density estimation is 1
# the method for bandwidth selection is "mserd" (Mean Squared Error - RD)
out <- rdrobust(Y,
X,
kernel = "triangular",
p = 1,
bwselect = "mserd",
all = TRUE)
summary(out)
# rdrobust with covariates
Z <- cbind(meyersson_2014ecta$vshr_islam1994,
meyersson_2014ecta$partycount,
meyersson_2014ecta$lpop1994,
meyersson_2014ecta$merkezi,
meyersson_2014ecta$merkezp,
meyersson_2014ecta$subbuyuk,
meyersson_2014ecta$buyuk)
colnames(Z) <- c("vshr_islam1994",
"partycount",
"lpop1994",
"merkezi",
"merkezp",
"subbuyuk",
"buyuk")
out <- rdrobust(Y,
X,
covs = Z,
kernel = 'triangular',
scaleregul = 1,
p = 1,
bwselect = 'mserd',
all = TRUE)
summary(out)
